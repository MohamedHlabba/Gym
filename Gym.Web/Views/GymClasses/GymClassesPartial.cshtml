@model IEnumerable<GymClass>
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> userManger;
@foreach (var item in Model)

{
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StartDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Duration)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>



        <td>
            @{ if (User.Identity.IsAuthenticated)
                {
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a><span> | </span>
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> <span> | </span>
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a><span> | </span>
                    @*<a asp-action="BookingToggle" asp-route-id="@item.Id">Book</a>*@
                    <a asp-action="BookingToggle" asp-route-id="@item.Id"
                       class="btn @(item.AttendingMembers.Where(u=>u.ApplicationUserId.Equals(userManger.GetUserId(User))).Count()==0 ? "btn-success" : "btn-danger")">
                        @(item.AttendingMembers.Where(u => u.ApplicationUserId.Equals(userManger.GetUserId(User))).Count() ==0 ? "book" : "cancel")
                    </a>
                    <gympass is-booked="@(item.AttendingMembers.Where(u=>u.ApplicationUserId.Equals(userManger.GetUserId(User))).Count()==0 ? false :true)"></gympass>
                }
            }
        </td>
    </tr>
}